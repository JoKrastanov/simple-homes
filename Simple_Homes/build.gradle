plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
//	id 'org.springframework.experimental.aot' version '0.10.3'
	id 'org.graalvm.buildtools.native' version '0.9.3'
	id "org.sonarqube" version "3.3"
}

group = 'com.javatodev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.auth0:java-jwt:3.11.0'
	implementation 'io.github.openfeign:feign-okhttp:11.0'
	implementation 'junit:junit:4.13.1'
	implementation 'junit:junit:4.13.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}
sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
	}
}

//nativeBuild {
//	classpath processAotResources.outputs, compileAotJava.outputs
//}
//
//nativeTest {
//	classpath processAotTestResources.outputs, compileAotTestJava.outputs
//}

jar {
	archiveBaseName = 'simple-homes'
	archiveVersion =  '0.1.0'
}

test {
	useJUnitPlatform()
}